                    Callables
        What are callables?
Any object thah can be called using the () operator.    -> Callables always return a value.
    like functions and methods, but it goes beyond those two...
Many other objects in python are callable.
To see if an object is callable we can use the built-in function: callable.

callable(print) -> True
callable('abc' .udder) -> True  -> string instance
callable(str.upper) -> True     -> string class
callable(callable) -> True      -> callable is a built-in function.
callable(10) -> False           -> ints, strings, lists, (lots of ->etc.)  are not callable


        Different Types of callables
built-in functions          print           len             callable
built-in methods            a_str.upper         a_list.append
user-defined functions      created using def or lambda expressions
methods                     functions bound to an object
class                       MyClass(x, y, z)
                             \  ->  __new__(x, y, z)  -> creates the new object
                                -> __init__(self, x, y, z)
                                -> returns the object (reference)

class instances             if the implements __call__ method
