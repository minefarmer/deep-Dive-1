                        Scopes and Namespaces

When an object is assigned to a variable    a = 10

    that variable points to some object

        and we say that the variable (name) is bound to that object.

That object can be accessed using that name in various parts of my code.


            But not just anywhere in my code!  ***********************************************************

That variable name and it's binding (name and object) only "exist" in specific parts of my code.

    The portion of code where that name/binding is defined, is called the (lexical scope) of the variable.

    These bindings are stored in (namespaces).      'Each scope has it's own 'namespace'.


            The Global scope.   *****************************************************************************************
The global scope is essentially the module scope.
It spans a single file only.
There is no concept of a truly global scope (across all modules in our entire app) in Python.
The only exception to this are some of the built-in globally available objects, such as:

    True, False, None, dict, print

The built-in and global variables can be used anywhere inside our module, including inside any function.


        
