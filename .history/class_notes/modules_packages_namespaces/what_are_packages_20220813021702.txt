                # What are Packages?
        Packages are Modules            (but modules are not necessarily packages)

They can contain
        modules
        packages        (called sub-packages)

If a module is a package, it must have a value set for __path__

After I have imported a module, I can easily see if that module is a package by inspecting the __path__ atriibute   (empty -> module, not-empty -> package)

After i have imported a module, you can easily see if that module is a package bt inspecting the __path__ atriibute (empty -> module, not-empty -> package)


            Packages and file systems  *********************************************************************
Remember that modules do not have to be entities in a file system.      (loaders, finders)
By the same token, packages do not have to be entities in the file system.
Typically they are - just as typically modules are file system entities.
But packages represent a hierarchy of modules / packages.

    pack1,mod1
    pack1.pack1_1.mod1_1


            Importing nested packages  *******************************************************************************
If I have a statement in your top-level program such as as:
    import pack1.pack1.module1

The import system will perform these steps:
    imports pack1
    imports pack1.pack1_1.module1

The sys.modules cache will contain entities for:        pack1
                                                        pack1.pack1_1
                                                        pack1.pack1_1.module1


            File system based Packages  *********************************************************************************
Although modules and packages can be far more ge


