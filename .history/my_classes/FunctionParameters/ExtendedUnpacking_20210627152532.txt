        The use case for extended unpacking.

We don't always want to unpack every single item in an iterable.
We may, for example, want to unpack the first value, and then unpack the remaining values into another variable.

l = [1, 2, 3, 4, 5, 6]

We can achieve this using slicing:      a = l[0]
                                        b = l[1:]

or, using simple unpacking:             a, b = l[0], l[1:]      (aka parallel assignment)

We can also use the * operator:         a, *b = l



        Usage with ordered types

a, *b = [-10, 5, 2, 100]        a = -10     b = [5, 2, 100]

a, *b 
